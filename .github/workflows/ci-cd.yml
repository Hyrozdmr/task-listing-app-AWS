name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_ENV: test

jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2

      - name: Install Angular dependencies
        run: npm ci

      - name: Run Angular Tests
        run: npm run test:coverage

      - name: Install Express dependencies
        run: npm --prefix ./server ci

      - name: Run Linting
        run: npm --prefix ./server run lint 

      - name: Run Migration
        run: npm --prefix ./server run migrate

      - name: Run Express Tests
        run: npm --prefix ./server run coverage

  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    needs: buildAndTest

    steps:
      - uses: actions/checkout@v2

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY }}
          username: ${{ secrets.SERVICE_PRINCIPAL }}
          password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY }}/tasklistingapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY }}/tasklistingapp:${{ github.sha }}


